# Red Helpchain basada en el ejemplo de First-Network docker-compose-e2e con COUCHDB
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

volumes:
  orderer.ord.com:
  peer0.reg.com:
  peer1.reg.com:
  peer0.sop.com:
  peer1.sop.com:
  peer0.usr.com:
  peer1.usr.com:

networks:
  helpchain:

services:
  ca0:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-reg
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.reg.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/CA1_PRIVATE_KEY
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.reg.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/CA1_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/reg.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca-reg
    networks:
      - helpchain

  ca1:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-sop
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.sop.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/CA2_PRIVATE_KEY
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.sop.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/CA2_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/sop.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca-sop
    networks:
      - helpchain

  ca2:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-usr
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.usr.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/CA3_PRIVATE_KEY
    ports:
      - "9054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.sop.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/CA3_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/usr.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca-usr
    networks:
      - helpchain

  orderer.ord.com:
    extends:
      file:   base/docker-compose-base.yaml
      service: orderer.ord.com
    container_name: orderer.ord.com
    networks:
      - helpchain

  peer0.reg.com:
    container_name: peer0.reg.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.reg.com
    networks:
      - helpchain

  peer1.reg.com:
    container_name: peer1.reg.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.reg.com
    networks:
      - helpchain

  peer0.sop.com:
    container_name: peer0.sop.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.sop.com
    networks:
      - helpchain

  peer1.sop.com:
    container_name: peer1.sop.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.sop.com
    networks:
      - helpchain

  peer0.usr.com:
    container_name: peer0.usr.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.usr.com
    networks:
      - helpchain

  peer1.usr.com:
    container_name: peer1.usr.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.usr.com
    networks:
      - helpchain

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:latest
    tty: true
    stdin_open: true
    environment:
      - SYS_CHANNEL=$SYS_CHANNEL
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=DEBUG
      #- FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.reg.com:7051
      - CORE_PEER_LOCALMSPID=ReguladoresMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/reg.com/peers/peer0.reg.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/reg.com/peers/peer0.reg.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/reg.com/peers/peer0.reg.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/reg.com/users/Admin@reg.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
    #    - ./../chaincode/:/opt/gopath/src/github.com/chaincode
        - ./../apphelpchain/Orgs/Reguladores/:/opt/gopath/src/github.com/chaincode
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - orderer.ord.com
      - peer0.reg.com
      - peer1.reg.com
      - peer0.sop.com
      - peer1.sop.com
      - peer0.usr.com
      - peer1.usr.com
    networks:
      - helpchain
